/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * To learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.4/samples
 */
import AnsiColors.GREEN
import AnsiColors.RED
import AnsiColors.RESET

group = "org.eventonight.eventonight"
version = "1.0-SNAPSHOT"

val isWindows = System.getProperty("os.name").lowercase().contains("windows")

allprojects {
    repositories {
        mavenCentral()
    }
}

tasks.register<Exec>("teardownDevEnvironment") {
    if(isWindows){
        commandLine("powershell", "-Command", "& 'C:\\Program Files\\Git\\bin\\bash.exe' -c './scripts/composeDevEnvironment.sh down -v --remove-orphans'")
    } else {
        commandLine("./scripts/composeDevEnvironment.sh", "down", "-v", "--remove-orphans")
    }
}

tasks.register<Exec>("setupDevEnvironment") {
//    dependsOn("teardownDevEnvironment")
    doFirst {
        var exitCode = -1
        if(isWindows){
            exitCode = ProcessBuilder("powershell", "-Command", "& 'C:\\Program Files\\Git\\bin\\bash.exe' -c './scripts/composeDevEnvironment.sh down -v --remove-orphans'")
            .inheritIO()
            .start()
            .waitFor()
        } else {
            exitCode = ProcessBuilder("./scripts/composeDevEnvironment.sh", "down", "-v", "--remove-orphans")
            .inheritIO()
            .start()
            .waitFor()
        }
        
        if (exitCode != 0) {
            throw GradleException("${RED}Teardown failed with exit code $exitCode ${RESET}")
        }
        println("${GREEN}Teardown completed${RESET}")
    }
    
    if(isWindows){
        commandLine("powershell", "-Command", "& 'C:\\Program Files\\Git\\bin\\bash.exe' -c './scripts/composeDevEnvironment.sh up -d --force-recreate --wait'")
    } else {
        commandLine("./scripts/composeDevEnvironment.sh", "up", "-d", "--force-recreate", "--wait")
    }
    
}