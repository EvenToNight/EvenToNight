/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * To learn more about Gradle by exploring our Samples at https://docs.gradle.org/8.4/samples
 */
import AnsiColors.GREEN
import AnsiColors.RED
import AnsiColors.RESET

group = "org.eventonight.eventonight"
version = "1.0-SNAPSHOT"

plugins {
    base
}

allprojects {
    repositories {
        mavenCentral()
    }
}

tasks.register("checkEnvFile") {
    description = "Checks if .env file exists, otherwise copies from .env.template"
    group = "setup"

    val envFile = file(".env")
    val envTemplate = file(".env.template")

    if (!envFile.exists() && envTemplate.exists()) {
        envTemplate.copyTo(envFile)
        println("${GREEN} .env file created from .env.template${RESET}")
    } else if (!envTemplate.exists()) {
        throw GradleException("${RED} Error: .env.template not found in project root!${RESET}")
    } else {
        println("${GREEN} .env file already present${RESET}")
    }
}

tasks.named("build") {
    dependsOn("checkEnvFile")
}

tasks.register<Exec>("teardownDevEnvironment") {
    val isWindows = System.getProperty("os.name").lowercase().contains("windows")
    if(isWindows){
        commandLine("powershell", "-Command", "& 'C:\\Program Files\\Git\\bin\\bash.exe' -c './scripts/composeDevEnvironment.sh down -v --remove-orphans'")
    } else {
        commandLine("./scripts/composeDevEnvironment.sh", "down", "-v", "--remove-orphans")
    }
}

tasks.register<Exec>("setupDevEnvironment") {
//    dependsOn("teardownDevEnvironment")
    val isWindows = System.getProperty("os.name").lowercase().contains("windows")
    doFirst {
        val exitCode = if(isWindows){
            ProcessBuilder("powershell", "-Command", "& 'C:\\Program Files\\Git\\bin\\bash.exe' -c './scripts/composeDevEnvironment.sh down -v --remove-orphans'")
                .inheritIO()
                .start()
                .waitFor()
        } else {
            ProcessBuilder("./scripts/composeDevEnvironment.sh", "down", "-v", "--remove-orphans")
                .inheritIO()
                .start()
                .waitFor()
        }
        
        if (exitCode != 0) {
            throw GradleException("${RED}Teardown failed with exit code $exitCode ${RESET}")
        }
        println("${GREEN}Teardown completed${RESET}")
    }

    if(isWindows){
        commandLine("powershell", "-Command", "& 'C:\\Program Files\\Git\\bin\\bash.exe' -c './scripts/composeDevEnvironment.sh up -d --force-recreate --wait'")
    } else {
        commandLine("./scripts/composeDevEnvironment.sh", "up", "-d", "--force-recreate", "--wait")
    }

}