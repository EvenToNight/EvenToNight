services:
  events:
    image: ghcr.io/eventonight/eventonight/events:latest
    networks:
      - eventonight-network
      - events-network
    environment:
      - PORT=${EVENTS_SERVICE_PORT}
      - RABBITMQ_HOST=rabbitmq
      - MONGO_HOST=mongo-events
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.events.rule=Host(`events.${HOST}`)"
      - "traefik.http.routers.events.entrypoints=web"
      - "traefik.http.services.events.loadbalancer.server.port=${EVENTS_SERVICE_PORT}"
    restart: unless-stopped
    depends_on:
      mongo-events:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  mongo-events:
    image: mongo
    restart: unless-stopped
    networks:
      - events-network
    healthcheck:
      test: [ 'CMD', 'mongosh', '--quiet', '--eval', 'db.runCommand({ ping: 1 }).ok' ]
      interval: 2s
      timeout: 3s
      retries: 10
      start_period: 30s

networks:
  eventonight-network:
    driver: bridge
  events-network:
    driver: bridge