services:
  users:
    image: ghcr.io/eventonight/eventonight/users:latest
    networks:
      - eventonight-network
      - users-network
    environment:
      - PORT=${USERS_SERVICE_PORT}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.users.rule=Host(`users.${HOST}`)"
      - "traefik.http.routers.users.entrypoints=web"
      - "traefik.http.services.users.loadbalancer.server.port=${USERS_SERVICE_PORT}"
    restart: unless-stopped
    depends_on:
      mongo-users:
        condition: service_healthy
      rabbitmq-users:
        condition: service_healthy

  rabbitmq-users:
    image: rabbitmq:3-management-alpine
    restart: unless-stopped
    networks:
      - users-network
    healthcheck:
      test: [ 'CMD', 'rabbitmq-diagnostics', 'status' ]
      interval: 2s
      timeout: 3s
      retries: 100
      start_period: 60s

  mongo-users:
    image: mongo
    restart: unless-stopped
    networks:
      - users-network
    healthcheck:
      test: [ 'CMD', 'mongosh', '--quiet', '--eval', 'db.runCommand({ ping: 1 }).ok' ]
      interval: 2s
      timeout: 3s
      retries: 10
      start_period: 30s

networks:
  eventonight-network:
    driver: bridge
  users-network:
    driver: bridge